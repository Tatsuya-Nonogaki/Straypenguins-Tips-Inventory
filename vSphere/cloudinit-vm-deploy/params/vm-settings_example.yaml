# Example vm-settings.yaml for cloudinit-linux-vm-deploy.ps1

# == Infrastructure (vCenter Connection) ==
# If vcenter_user/vcenter_password are blank or omitted,
# the script will look for cached credentials via New-VICredentialStoreItem.
vcenter_host: vcenter01.backyard.local
vcenter_user: administrator@vsphere.local   # Single Sign-On (SSO) user. Example: administrator@vsphere.local
vcenter_password: "KenFiat50s^"             # SSO password. "" or omit to use credential store.

# == VM Hardware/Placement ==
template_vm_name: rhel9-tpl
new_vm_name: original01
datacenter_name: VMDATACENTER
cluster_name: CLST_A
datastore_name: ProdStore
seed_iso_copy_store: "[COMMSTORE01] cloudinit-iso/"   # Datastore and path where seed ISO will be copied temporarily, in a form "[store]<sp>path(/)"
resource_pool_name: Resources   # If you are not sure, leave as "Resources" or comment out.
esxi_host: vhost-a01
## Network port label; set either of the two (not both)
#network_name: VM Network       # For standard switch
dvs_portgroup: PROD_LAN01       # For Distributed Switch
##
cpu: 3
memory_mb: 4096
disk_format: Thick    # One of: Thick, Thin, EagerZeroedThick, or leave blank (or comment the line) to retain template's format
disks:
  - name: Hard disk 1
    size_gb: 50
  - name: Hard disk 2
    size_gb: 8
  - name: Hard disk 3
    size_gb: 5
  #- name: Hard disk 4
  #  size_gb: 3

# Map device file paths to swap dictionary keys for convenient placeholder substitution in YAML templates (e.g., for growpart devices)
swaps:
  1: /dev/sdb1
 #2: /dev/sdd1

# Swap devices that must be reformatted in order to resize them (kit-specific extension, not in cloud-init)
resize_swap:
  - /dev/sdb1
  #- /dev/sdd1

# List of device paths to expand filesystems with resize2fs after partition expansion.
# This is a kit-specific extension, as the standard cloud-init 'resizefs' module only supports the root device.
# Note: Including the root device (e.g., /dev/sda3) is optional; it will be resized by default.
resize_fs:
  - /dev/sdc1
  #- /dev/sda3

# == OS/Cloud-init Parameters ==
hostname: original01
instance_id: original01-20251001
fqdn: original01.production.local

netif1:
  netdev: ens192
  ip_addr: 192.168.0.10
  prefix: 24
  gateway: 192.168.0.254
  dns1: 192.168.0.201
  dns2: 192.168.0.202
  ignore-auto-routes: yes
  ignore-auto-dns: yes

# Additional NIC example (uncomment to use)
# netif2:
#  ip_addr: 10.10.10.101
#  prefix: 24
#  ignore-auto-routes: yes
#  ignore-auto-dns: yes

username: mainte
user_groups: "wheel,adm,systemd-journal"
password: "naks9slewiv"    # As plain string for use with PowerShell logics
password_hash: "$6$Kc8......"      # SHA-512 hashed string for user registration in the guest Linux: Generate using 'openssl passwd -6 "password"'
ssh_key1: "ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAr..."
# ssh_key2: "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAI..."

# == Script tuning parameters ==
# How long the script wait for cloud-init completion at the finalization Phase
cloudinit_wait_sec: 600
cloudinit_poll_sec: 10
cloudinit_backoff_sec: 60      # Pause before the polling above starts
